{
    "room1": {
        "name": "bedroom1",
        "appliance1": {
            "type": "fan",
            "hours": "8"
        },
        "appliance2": {
            "type": "light",
            "hours": "6"
        },
        "appliance3": {
            "type": "Air conditioner",
            "hours": "6"
        }
    },
    "room2": {
        "name": "bedroom2",
        "appliance1": {
            "type": "fan1",
            "hours": "8"
        },
        "appliance2": {
            "type": "light1",
            "hours": "8"
        },
        "appliance3": {
            "type": "light2",
            "hours": "7"
        },
        "appliance4": {
            "type": "Air conditioner",
            "hours": "6"
        }
    },
    "room3": {
        "name": "hall",
        "appliance1": {
            "type": "fan1",
            "hours": "8"
        },
        "appliance2": {
            "type": "fan2",
            "hours": "6"
        },
        "appliance3": {
            "type": "light1",
            "hours": "6"
        },
        "appliance4": {
            "type": "light2",
            "hours": "6"
        },
        "appliance5": {
            "type": "television",
            "hours": "6"
        }
    },
    "room4": {
        "name": "misc",
        "appliance1": {
            "type": "washing machine",
            "hours": "1"
        },
        "appliance2": {
            "type": "heater",
            "hours": "1"
        },
        "appliance3": {
            "type": "light1",
            "hours": "refrigerator"
        },
        "appliance4": {
            "type": "iron box",
            "hours": "0.30"
        }        
    }
}

-------------------------PART1:------------------
#include <ESP8266WiFi.h>
#include <ESP8266HTTPClient.h>
 
void setup () {
 
  Serial.begin(115200);
  WiFi.begin("Gokul", "12345678");
 
  while (WiFi.status() != WL_CONNECTED) {
 
    delay(1000);
    Serial.println("Connecting..");
 
  }
  Serial.println("Connected to WiFi Network");
 
}
 
void loop() {
 
  if (WiFi.status() == WL_CONNECTED) { //Check WiFi connection status
 
    HTTPClient http;  //Declare an object of class HTTPClient
 
    http.begin("http://192.168.1.88:8090/helloesp"); //Specify request destination
 
    int httpCode = http.GET(); //Send the request
 
    if (httpCode > 0) { //Check the returning code
 
      String payload = http.getString();   //Get the request response payload
      Serial.println(payload);             //Print the response payload
 
    }else Serial.println("An error ocurred");
 
    http.end();   //Close connection
 
  }
 
  delay(10000);    //Send a request every 10 seconds
 
}

    -------------------PART2:-------------------------
//#include <WiFi.h>
//#include <HTTPClient.h>
#include <ESP8266WiFi.h>
#include <ESP8266HTTPClient.h>
#include <WiFiClient.h>
//#include <Wire.h>

// Replace with your network credentials
const char* ssid     = "Gokul";
const char* password = "12345678";

// REPLACE with your Domain name and URL path or IP address with path
const char* serverName = "http://localhost/DeviceToSQL.php";

// Keep this API Key value to be compatible with the PHP code provided in the project page. 
// If you change the apiKeyValue value, the PHP file /post-esp-data.php also needs to have the same key 
String apiKeyValue = "secret_key";

void setup() {
  Serial.begin(115200);
  
  WiFi.begin(ssid, password);
  Serial.println("Connecting");
  while(WiFi.status() != WL_CONNECTED) { 
    delay(500);
    Serial.print(".");
  }
  Serial.println("");
  Serial.print("Connected to WiFi network with IP Address: ");
  Serial.println(WiFi.localIP());

}

void loop() {
  //Check WiFi connection status
  if(WiFi.status()== WL_CONNECTED){
    HTTPClient http;
    
    // Your Domain name with URL path or IP address with path
    //http.begin(serverName);
    
    // Specify content-type header
    http.addHeader("Content-Type", "application/x-www-form-urlencoded");
    
    // Prepare your HTTP POST request data
//    String httpRequestData = "api_key=" + apiKeyValue + "&sensor=" + sensorName
//                          + "&location=" + sensorLocation + "&value1=" + String(bme.readTemperature())
//                          + "&value2=" + String(bme.readHumidity()) + "&value3=" + String(bme.readPressure()/100.0F) + "";
    String httpRequestData = "api_key=secret_key&meter_id=1001&voltage=123&current=123";
    Serial.print("httpRequestData: ");
    Serial.println(httpRequestData);
    
    // You can comment the httpRequestData variable above
    // then, use the httpRequestData variable below (for testing purposes without the BME280 sensor)
    // String httpRequestData = "api_key=secret_key&meter_id=1001&voltage=123&current=123";

    // Send HTTP POST request
    //int httpResponseCode = http.POST(httpRequestData);
    http.begin("http://localhost/DeviceToSQL.php?api_key=secret_key&meter_id=1001&voltage=123&current=123");
    int httpResponseCode = http.GET();
    // If you need an HTTP request with a content type: text/plain
    //http.addHeader("Content-Type", "text/plain");
    //int httpResponseCode = http.POST("Hello, World!");
    
    // If you need an HTTP request with a content type: application/json, use the following:
    //http.addHeader("Content-Type", "application/json");
    //int httpResponseCode = http.POST("{\"value1\":\"19\",\"value2\":\"67\",\"value3\":\"78\"}");
        
    if (httpResponseCode>0) {
      Serial.print("HTTP Response code: ");
      Serial.println(httpResponseCode);
    }
    else {
      Serial.print("Error code: ");
      Serial.println(httpResponseCode);
    }
    // Free resources
    http.end();
  }
  else {
    Serial.println("WiFi Disconnected");
  }
  //Send an HTTP POST request every 30 seconds
  delay(10000);  
}


